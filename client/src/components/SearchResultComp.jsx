import styled from 'styled-components';
import COLOR from '../utility/Color';
import TagPlaceSM from './TagPlaceSM';
import { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import logoImg from '../../public/images/logo.png';

const SearchResultComp = ({ result }) => {
  const navigate = useNavigate();
  // console.log('Ìôà Ïª®ÌÖêÏ∏† Îç∞Ïù¥ÌÑ∞', result);

  //postDatas Î∞∞Ïó¥ÏóêÏÑú Ï¢ãÏïÑÏöî Îç∞Ïù¥ÌÑ∞ÏôÄ id Îç∞Ïù¥ÌÑ∞Îßå Îî∞Î°ú Ï∂îÏ∂úÌï¥ÏÑú Î∞∞Ïó¥Î°ú Í¥ÄÎ¶¨
  const [likeStates, setLikeStates] = useState(
    result.map((res) => ({ liked: res.liked, id: res.id }))
  );

  //postIdÏôÄ ÏùºÏπòÌïòÎäî likeState Ï∞æÍ∏∞
  const findLikeStateByPostId = (postId) => {
    return likeStates.find((likeState) => likeState.id === postId);
  };

  const handleLikeToggle = async (postId) => {
    // console.log(postId);
    try {
      //ÏÑúÎ≤ÑÎ°ú Ï¢ãÏïÑÏöî Îç∞Ïù¥ÌÑ∞ ÏóÖÎç∞Ïù¥Ìä∏
      try {
        const response = await fetch(
          `${import.meta.env.VITE_APP_API_URL}/posts${postId}/like`,
          {
            method: 'PATCH',
            credentials: 'include',
          }
        );
        const data = await response.json();
        console.log('Ï¢ãÏïÑÏöî ÏóÖÎç∞Ïù¥Ìä∏', data);
        alert('Ï∞ú Î™©Î°ùÏùÑ ÏàòÏ†ïÌñàÏñ¥Ïöî.üòã');
      } catch (error) {
        console.error(error);
      }

      //ÌôîÎ©¥ Ï∂úÎ†•
      setLikeStates((prevLikeStates) =>
        prevLikeStates.map((prevState) =>
          //ÌÅ¥Î¶≠Ìïú Î≤ÑÌäºÏù¥ ÏÜçÌïú postÏùò IdÍ∞Ä postDatasÏùò post IdÏôÄ Í∞ôÏùÑ Í≤ΩÏö∞Ïóê liked Í∞íÏùÑ Ïù¥Ï†Ñ Í∞íÍ≥º Î∞òÎåÄÎ°ú ÌÜ†Í∏ÄÌï®
          prevState.id === postId
            ? { ...prevState, liked: !prevState.liked }
            : prevState
        )
      );
    } catch (error) {
      console.error(error);
    }
  };

  const HeartIcon = () => {
    return (
      <svg
        width='28'
        height='28'
        viewBox='0 0 28 28'
        fill='none'
        xmlns='http://www.w3.org/2000/svg'
      >
        <path
          fillRule='evenodd'
          clipRule='evenodd'
          d='M12.7213 25.1148C13.4983 25.6281 14.5005 25.6281 15.2763 25.1148C17.7438 23.4861 23.1163 19.593 25.431 15.2366C28.4818 9.48965 24.899 3.75781 20.1623 3.75781C17.4626 3.75781 15.8386 5.16831 14.9403 6.38048C14.8324 6.52894 14.6909 6.64976 14.5274 6.73307C14.3638 6.81638 14.1829 6.85981 13.9994 6.85981C13.8158 6.85981 13.6349 6.81638 13.4714 6.73307C13.3079 6.64976 13.1664 6.52894 13.0585 6.38048C12.1601 5.16831 10.5361 3.75781 7.83646 3.75781C3.09979 3.75781 -0.483041 9.48965 2.56896 15.2366C4.88129 19.593 10.2561 23.4861 12.7213 25.1148'
          fill='#EDEDED'
        />
      </svg>
    );
  };

  const HeartIconClicked = () => {
    return (
      <svg
        width='28'
        height='28'
        viewBox='0 0 28 28'
        fill='none'
        xmlns='http://www.w3.org/2000/svg'
      >
        <path
          fillRule='evenodd'
          clipRule='evenodd'
          d='M12.7213 25.1148C13.4983 25.6281 14.5005 25.6281 15.2763 25.1148C17.7438 23.4861 23.1163 19.593 25.431 15.2366C28.4818 9.48965 24.899 3.75781 20.1623 3.75781C17.4626 3.75781 15.8386 5.16831 14.9403 6.38048C14.8324 6.52894 14.6909 6.64976 14.5274 6.73307C14.3638 6.81638 14.1829 6.85981 13.9994 6.85981C13.8158 6.85981 13.6349 6.81638 13.4714 6.73307C13.3079 6.64976 13.1664 6.52894 13.0585 6.38048C12.1601 5.16831 10.5361 3.75781 7.83646 3.75781C3.09979 3.75781 -0.483041 9.48965 2.56896 15.2366C4.88129 19.593 10.2561 23.4861 12.7213 25.1148Z'
          fill='#FF7971'
        />
      </svg>
    );
  };

  const textOverflow = {
    width: '124px',
    whiteSpace: 'nowrap',
    overflow: 'hidden',
    textOverflow: 'ellipsis',
  };

  const imgStyle = {
    marginLeft: '28px',
    borderRadius: '12px',
  };

  const fontWrapper = {
    display: 'flex',
    flexDirection: 'column',
    justifyContent: 'space-between',
    height: '112px',
  };

  const fontStyle1 = {
    fontSize: '14px',
    fontWeight: '700',
  };

  const fontStyle2 = {
    fontSize: '18px',
    fontWeight: '800',
  };

  const fontStyle3 = {
    fontSize: '14px',
    fontWeight: '400',
    textDecoration: 'underline',
  };

  const fontstyle4 = {
    display: 'flex',
    fontSize: '14px',
    fontWeight: '400',
    gap: '8px',
  };

  const fontContainer = {
    color: COLOR.GRAY_500,
    display: 'flex',
    flexDirection: 'column',
    gap: '4px',
  };

  const coloredfont = {
    color: COLOR.POTZ_PINK_DEFAULT,
    marginRight: '4px',
  };

  const buttonContainer = {
    display: 'flex',
    flexDirection: 'column',
    justifyContent: 'space-between',
    height: '120px',
    marginRight: '28px',
  };

  const tagStyle = {
    position: 'relative',
    top: '28px',
    left: '36px',
  };

  const homeContentesContainer = {
    marginBottom: '50px',
  };

  const linkStyle = {
    color: COLOR.GRAY_300,
  };

  return (
    <div style={homeContentesContainer}>
      {result.map((res) => {
        const likeState = findLikeStateByPostId(res.id);
        return (
          <HomeContentsWrapper
            key={res.id}
            onClick={() => navigate(`/posts/${res.id}`)}
          >
            <div>
              <div style={tagStyle}>
                <TagPlaceSM>{res.category}</TagPlaceSM>
              </div>
              <img
                width={112}
                height={112}
                style={imgStyle}
                src={res.imageUrl || logoImg}
              />
            </div>
            <div style={fontWrapper}>
              <div style={fontContainer}>
                <div style={textOverflow}>
                  <span style={fontStyle1}>{res.storeName}</span>
                </div>
                <div style={fontStyle2}>
                  <span style={coloredfont}>
                    {res.deliveryFeePerPerson ? (
                      <span>{res.deliveryFeePerPerson}</span>
                    ) : (
                      <span>Î¨¥Î£å</span>
                    )}
                  </span>
                  {res.deliveryFeePerPerson ? (
                    <span>ÏõêÏî© Î∞∞Îã¨</span>
                  ) : (
                    <span>Î∞∞Îã¨</span>
                  )}
                </div>
                <div style={fontStyle3}>
                  {res.orderLink ? (
                    <a style={linkStyle} href={res.orderLink}>
                      <span>Î∞∞Îã¨ Ïï± ÎßÅÌÅ¨ Î∞îÎ°úÍ∞ÄÍ∏∞</span>
                    </a>
                  ) : null}
                </div>
              </div>
              <div style={fontstyle4}>
                <div>
                  <span>{res.participantsCount}</span>
                  <span>/</span>
                  <span>{res.recruitment}</span>
                  <span>Î™Ö</span>
                </div>
                <div>
                  <span>{res.meetingLocation}</span>
                </div>
              </div>
            </div>
            <div style={buttonContainer}>
              <ButtonContainer
                onClick={(e) => {
                  e.stopPropagation();
                  handleLikeToggle(res.id);
                }}
              >
                {/* findLikeStateByPostId Ìï®ÏàòÎ°ú Ï∞æÏùÄ postidÏôÄ Í∞ôÏùÄ idÎ•º Í∞ÄÏßÑ Í∞ùÏ≤¥ */}
                {likeStates && likeState.liked ? (
                  <HeartIconClicked />
                ) : (
                  <HeartIcon />
                )}
              </ButtonContainer>
            </div>
          </HomeContentsWrapper>
        );
      })}
    </div>
  );
};

const HomeContentsWrapper = styled.div`
  height: 150px;
  border: 1px solid ${COLOR.GRAY_100};
  display: flex;
  justify-content: space-between;
  align-items: center;
  cursor: grab;
  background: ${COLOR.WHITE};
  transition: all 0.3s ease;

  &:hover {
    transform: scale(1.04);
    border-color: ${COLOR.POTZ_PINK_100};
  }
`;

const ButtonContainer = styled.button`
  display: flex;
  width: 36px;
  height: 36px;
  justify-content: center;
  align-items: center;
  border: none;
  background-color: ${COLOR.WHITE};
  cursor: grab;
  &:hover {
    background: ${COLOR.POTZ_PINK_100};
  }
`;

export default SearchResultComp;
